/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IUnicrowDispute,
  IUnicrowDisputeInterface,
} from "../IUnicrowDispute";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "uint16[2]",
        name: "validation",
        type: "uint16[2]",
      },
    ],
    name: "approveSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "uint16[2]",
        name: "newSplit",
        type: "uint16[2]",
      },
    ],
    name: "offerSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IUnicrowDispute__factory {
  static readonly abi = _abi;
  static createInterface(): IUnicrowDisputeInterface {
    return new utils.Interface(_abi) as IUnicrowDisputeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUnicrowDispute {
    return new Contract(address, _abi, signerOrProvider) as IUnicrowDispute;
  }
}
