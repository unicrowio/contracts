/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UnicrowArbitrator,
  UnicrowArbitratorInterface,
} from "../UnicrowArbitrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "unicrow_",
        type: "address",
      },
      {
        internalType: "address",
        name: "unicrowClaim_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengePeriodStart",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "challengePeriodEnd",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "challengeExtension",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketplaceFee",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "claimed",
            type: "uint16",
          },
          {
            internalType: "int16[2]",
            name: "consensus",
            type: "int16[2]",
          },
          {
            internalType: "uint16[4]",
            name: "split",
            type: "uint16[4]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Escrow",
        name: "escrow",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[5]",
        name: "amounts",
        type: "uint256[5]",
      },
    ],
    name: "Arbitrated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "arbitratorFee",
        type: "uint256",
      },
    ],
    name: "ArbitratorApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "arbitratorFee",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ArbitratorProposed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "validationAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "validation",
        type: "uint16",
      },
    ],
    name: "approveArbitrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "uint16[2]",
        name: "newSplit",
        type: "uint16[2]",
      },
    ],
    name: "arbitrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[5]",
        name: "currentSplit",
        type: "uint16[5]",
      },
    ],
    name: "arbitrationCalculation",
    outputs: [
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "escrowArbitrator",
    outputs: [
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "arbitratorFee",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "sellerConsensus",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "buyerConsensus",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "arbitrated",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "getArbitratorData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "arbitratorFee",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "sellerConsensus",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "buyerConsensus",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "arbitrated",
            type: "bool",
          },
        ],
        internalType: "struct Arbitrator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "arbitratorFee",
        type: "uint16",
      },
    ],
    name: "proposeArbitrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "arbitratorFee",
        type: "uint16",
      },
    ],
    name: "setArbitrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrow",
    outputs: [
      {
        internalType: "contract Unicrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrowClaim",
    outputs: [
      {
        internalType: "contract IUnicrowClaim",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002edd38038062002edd8339818101604052810190620000379190620000e0565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200017a565b600081519050620000da8162000160565b92915050565b60008060408385031215620000fa57620000f96200015b565b5b60006200010a85828601620000c9565b92505060206200011d85828601620000c9565b9150509250929050565b600062000134826200013b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200016b8162000127565b81146200017757600080fd5b50565b612d53806200018a6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80636e4e2934116100665780636e4e29341461013057806379414b3c1461014e5780638e032c5a1461016a578063e2bc475c14610186578063e9db7d79146101ba57610093565b806316e0551b146100985780632ea8eddd146100c8578063496f928b146100e45780634c403c5314610100575b600080fd5b6100b260048036038101906100ad9190611d5f565b6101d8565b6040516100bf91906125bc565b60405180910390f35b6100e260048036038101906100dd9190611d8c565b6102cc565b005b6100fe60048036038101906100f99190611ddf565b61061f565b005b61011a60048036038101906101159190611cd7565b610b64565b6040516101279190612464565b60405180910390f35b610138610f96565b60405161014591906124a1565b60405180910390f35b61016860048036038101906101639190611d8c565b610fbc565b005b610184600480360381019061017f9190611d8c565b611258565b005b6101a0600480360381019061019b9190611d5f565b6114f4565b6040516101b1959493929190612411565b60405180910390f35b6101c261157f565b6040516101cf9190612486565b60405180910390f35b6101e06117e4565b600360008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900461ffff1661ffff1661ffff1681526020016000820160169054906101000a900460ff161515151581526020016000820160179054906101000a900460ff161515151581526020016000820160189054906101000a900460ff1615151515815250509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661030d6115a5565b73ffffffffffffffffffffffffffffffffffffffff161461032d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561036757600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d19e596846040518263ffffffff1660e01b81526004016103c29190612611565b6102006040518083038186803b1580156103db57600080fd5b505afa1580156103ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104139190611d31565b6020015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561052d5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d19e596846040518263ffffffff1660e01b81526004016104a89190612611565b6102006040518083038186803b1580156104c157600080fd5b505afa1580156104d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f99190611d31565b6000015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b61053657600080fd5b816003600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003600085815260200190815260200160002060000160146101000a81548161ffff021916908361ffff16021790555060016003600085815260200190815260200160002060000160176101000a81548160ff02191690831515021790555060016003600085815260200190815260200160002060000160166101000a81548160ff021916908315150217905550505050565b600061062a836101d8565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d19e596856040518263ffffffff1660e01b81526004016106899190612611565b6102006040518083038186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190611d31565b9050816000015173ffffffffffffffffffffffffffffffffffffffff166106ff6115a5565b73ffffffffffffffffffffffffffffffffffffffff1614610755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074c9061251c565b60405180910390fd5b81606001518015610767575081604001515b6107a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079d9061259c565b60405180910390fd5b61271083600160ff16600281106107c0576107bf612adf565b5b602002015184600060ff16600281106107dc576107db612adf565b5b60200201516107eb919061282d565b61ffff161461082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610826906124bc565b60405180910390fd5b600061085a826101200151600060ff16600281106108505761084f612adf565b5b60200201516115ad565b60010b146108905761088b816101200151600060ff166002811061088157610880612adf565b5b60200201516115ad565b610893565b60015b816101200151600060ff16600281106108af576108ae612adf565b5b602002019060010b908160010b815250506108e9816101200151600160ff16600281106108df576108de612adf565b5b60200201516115ad565b816101200151600160ff166002811061090557610904612adf565b5b602002019060010b908160010b8152505082600060ff166002811061092d5761092c612adf565b5b602002015181610140015160006004811061094b5761094a612adf565b5b602002019061ffff16908161ffff168152505082600160ff166002811061097557610974612adf565b5b602002015181610140015160016004811061099357610992612adf565b5b602002019061ffff16908161ffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364166e63858361014001518461012001516040518463ffffffff1660e01b8152600401610a0f9392919061262c565b600060405180830381600087803b158015610a2957600080fd5b505af1158015610a3d573d6000803e3d6000fd5b5050505060016003600086815260200190815260200160002060000160186101000a81548160ff0219169083151502179055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b34291a6866040518263ffffffff1660e01b8152600401610acd9190612611565b60a060405180830381600087803b158015610ae757600080fd5b505af1158015610afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1f9190611d04565b9050847ff1861ae9c599e289fb150935395b66fbe4513f9657e6e38009c29fd4ffd309d1834284604051610b55939291906125d7565b60405180910390a25050505050565b60606000600467ffffffffffffffff811115610b8357610b82612b0e565b5b604051908082528060200260200182016040528015610bb15781602001602082028036833780820191505090505b509050600080610c2061271061ffff16610c1287600060ff1660058110610bdb57610bda612adf565b5b602002015161ffff1688600460ff1660058110610bfb57610bfa612adf565b5b602002015161ffff166115d290919063ffffffff16565b6115e890919063ffffffff16565b9050610c8b61271061ffff16610c7d87600160ff1660058110610c4657610c45612adf565b5b602002015161ffff1688600460ff1660058110610c6657610c65612adf565b5b602002015161ffff166115d290919063ffffffff16565b6115e890919063ffffffff16565b9150600085600360ff1660058110610ca657610ca5612adf565b5b602002015161ffff161115610d4c57610d1e61271061ffff16610d1087600160ff1660058110610cd957610cd8612adf565b5b602002015161ffff1688600360ff1660058110610cf957610cf8612adf565b5b602002015161ffff166115d290919063ffffffff16565b6115e890919063ffffffff16565b83600360ff1681518110610d3557610d34612adf565b5b602002602001019061ffff16908161ffff16815250505b600085600260ff1660058110610d6557610d64612adf565b5b602002015161ffff161115610e0b57610ddd61271061ffff16610dcf87600160ff1660058110610d9857610d97612adf565b5b602002015161ffff1688600260ff1660058110610db857610db7612adf565b5b602002015161ffff166115d290919063ffffffff16565b6115e890919063ffffffff16565b83600260ff1681518110610df457610df3612adf565b5b602002602001019061ffff16908161ffff16815250505b600085600060ff1660058110610e2457610e23612adf565b5b602002015161ffff161115610e9757610e698161ffff1686600060ff1660058110610e5257610e51612adf565b5b602002015161ffff166115fe90919063ffffffff16565b83600060ff1681518110610e8057610e7f612adf565b5b602002602001019061ffff16908161ffff16815250505b600085600160ff1660058110610eb057610eaf612adf565b5b602002015161ffff161115610f8b57610f5d8261ffff16610f4f85600260ff1681518110610ee157610ee0612adf565b5b602002602001015161ffff16610f4187600360ff1681518110610f0757610f06612adf565b5b602002602001015161ffff168a600160ff1660058110610f2a57610f29612adf565b5b602002015161ffff166115fe90919063ffffffff16565b6115fe90919063ffffffff16565b6115fe90919063ffffffff16565b83600160ff1681518110610f7457610f73612adf565b5b602002602001019061ffff16908161ffff16815250505b829350505050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b82610fc56115a5565b610fcf8282611614565b80610fe05750610fdf82826116fc565b5b61101f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611016906124dc565b60405180910390fd5b60006003600087815260200190815260200160002090508060000160179054906101000a900460ff16158061106357508060000160169054906101000a900460ff16155b6110a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611099906124fc565b60405180910390fd5b6110b3866110ae6115a5565b611614565b156111595760018160000160176101000a81548160ff02191690831515021790555060008160000160166101000a81548160ff021916908315150217905550848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160000160146101000a81548161ffff021916908361ffff16021790555061120d565b61116a866111656115a5565b6116fc565b1561120c5760018160000160166101000a81548160ff02191690831515021790555060008160000160176101000a81548160ff021916908315150217905550848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160000160146101000a81548161ffff021916908361ffff1602179055505b5b857fbf42827f17777ed92b098fa9e5f6823ecb5c116e3b23909cc242530b1784dbbc86866112396115a5565b604051611248939291906123da565b60405180910390a2505050505050565b826112616115a5565b61126b8282611614565b8061127c575061127b82826116fc565b5b6112bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b2906124dc565b60405180910390fd5b60006112c6866101d8565b9050806000015173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461133a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113319061253c565b60405180910390fd5b806020015161ffff168461ffff1614611388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137f9061255c565b60405180910390fd5b611399866113946115a5565b611614565b15611419576000151581606001511515146113e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e09061257c565b60405180910390fd5b60016003600088815260200190815260200160002060000160176101000a81548160ff0219169083151502179055505b61142a866114256115a5565b6116fc565b156114aa5760001515816040015115151461147a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114719061257c565b60405180910390fd5b60016003600088815260200190815260200160002060000160166101000a81548160ff0219169083151502179055505b857fd514ca74d69a194b5d9455914d0d20ef96d29b6177b241c9d5f608264055199c826000015183602001516040516114e49291906123b1565b60405180910390a2505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900461ffff16908060000160169054906101000a900460ff16908060000160179054906101000a900460ff16908060000160189054906101000a900460ff16905085565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000808260010b12156115c957816115c490612a38565b6115cb565b815b9050919050565b600081836115e09190612896565b905092915050565b600081836115f69190612865565b905092915050565b6000818361160c91906128f0565b905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d19e596846040518263ffffffff1660e01b81526004016116719190612611565b6102006040518083038186803b15801561168a57600080fd5b505afa15801561169e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c29190611d31565b6000015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d19e596846040518263ffffffff1660e01b81526004016117599190612611565b6102006040518083038186803b15801561177257600080fd5b505afa158015611786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117aa9190611d31565b6020015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600061ffff1681526020016000151581526020016000151581526020016000151581525090565b600061184661184184612688565b612663565b905080828560208602820111156118605761185f612b47565b5b60005b8581101561189057816118768882611b37565b845260208401935060208301925050600181019050611863565b5050509392505050565b60006118ad6118a8846126ae565b612663565b905080828560208602820111156118c7576118c6612b47565b5b60005b858110156118f757816118dd8882611c6e565b8452602084019350602083019250506001810190506118ca565b5050509392505050565b600061191461190f846126d4565b612663565b9050808285602086028201111561192e5761192d612b47565b5b60005b8581101561195e57816119448882611c83565b845260208401935060208301925050600181019050611931565b5050509392505050565b600061197b611976846126fa565b612663565b9050808285602086028201111561199557611994612b47565b5b60005b858110156119c557816119ab8882611c6e565b845260208401935060208301925050600181019050611998565b5050509392505050565b60006119e26119dd84612720565b612663565b905080828560208602820111156119fc576119fb612b47565b5b60005b85811015611a2c5781611a128882611cad565b8452602084019350602083019250506001810190506119ff565b5050509392505050565b600081359050611a4581612caa565b92915050565b600081519050611a5a81612caa565b92915050565b600082601f830112611a7557611a74612b3d565b5b6002611a82848285611833565b91505092915050565b600082601f830112611aa057611a9f612b3d565b5b6002611aad84828561189a565b91505092915050565b600082601f830112611acb57611aca612b3d565b5b6004611ad8848285611901565b91505092915050565b600082601f830112611af657611af5612b3d565b5b6005611b03848285611968565b91505092915050565b600082601f830112611b2157611b20612b3d565b5b6005611b2e8482856119cf565b91505092915050565b600081519050611b4681612cc1565b92915050565b60006102008284031215611b6357611b62612b42565b5b611b6e610180612663565b90506000611b7e84828501611a4b565b6000830152506020611b9284828501611a4b565b6020830152506040611ba684828501611cc2565b6040830152506060611bba84828501611cc2565b6060830152506080611bce84828501611cc2565b60808301525060a0611be284828501611a4b565b60a08301525060c0611bf684828501611cad565b60c08301525060e0611c0a84828501611a4b565b60e083015250610100611c1f84828501611c83565b61010083015250610120611c3584828501611a60565b61012083015250610160611c4b84828501611ab6565b610140830152506101e0611c6184828501611cad565b6101608301525092915050565b600081359050611c7d81612cd8565b92915050565b600081519050611c9281612cd8565b92915050565b600081359050611ca781612cef565b92915050565b600081519050611cbc81612cef565b92915050565b600081519050611cd181612d06565b92915050565b600060a08284031215611ced57611cec612b4c565b5b6000611cfb84828501611ae1565b91505092915050565b600060a08284031215611d1a57611d19612b4c565b5b6000611d2884828501611b0c565b91505092915050565b60006102008284031215611d4857611d47612b4c565b5b6000611d5684828501611b4c565b91505092915050565b600060208284031215611d7557611d74612b4c565b5b6000611d8384828501611c98565b91505092915050565b600080600060608486031215611da557611da4612b4c565b5b6000611db386828701611c98565b9350506020611dc486828701611a36565b9250506040611dd586828701611c6e565b9150509250925092565b60008060608385031215611df657611df5612b4c565b5b6000611e0485828601611c98565b9250506020611e1585828601611a8b565b9150509250929050565b6000611e2b83836120d2565b60208301905092915050565b6000611e438383612357565b60208301905092915050565b6000611e5b8383612384565b60208301905092915050565b611e7081612924565b82525050565b611e7f81612924565b82525050565b611e8e81612774565b611e9881846127d4565b9250611ea382612746565b8060005b83811015611ed4578151611ebb8782611e1f565b9650611ec6836127a0565b925050600181019050611ea7565b505050505050565b611ee581612774565b611eef81846127df565b9250611efa82612746565b8060005b83811015611f2b578151611f128782611e1f565b9650611f1d836127a0565b925050600181019050611efe565b505050505050565b611f3c8161277f565b611f4681846127ea565b9250611f5182612750565b8060005b83811015611f82578151611f698782611e37565b9650611f74836127ad565b925050600181019050611f55565b505050505050565b611f938161277f565b611f9d81846127f5565b9250611fa882612750565b8060005b83811015611fd9578151611fc08782611e37565b9650611fcb836127ad565b925050600181019050611fac565b505050505050565b6000611fec8261278a565b611ff68185612800565b93506120018361275a565b8060005b838110156120325781516120198882611e37565b9750612024836127ba565b925050600181019050612005565b5085935050505092915050565b61204881612795565b6120528184612811565b925061205d8261276a565b8060005b8381101561208e5781516120758782611e4f565b9650612080836127c7565b925050600181019050612061565b505050505050565b61209f81612936565b82525050565b6120ae81612936565b82525050565b6120bd8161299b565b82525050565b6120cc816129ad565b82525050565b6120db81612942565b82525050565b60006120ee60058361281c565b91506120f982612b62565b602082019050919050565b600061211160058361281c565b915061211c82612b8b565b602082019050919050565b600061213460058361281c565b915061213f82612bb4565b602082019050919050565b600061215760058361281c565b915061216282612bdd565b602082019050919050565b600061217a60058361281c565b915061218582612c06565b602082019050919050565b600061219d60058361281c565b91506121a882612c2f565b602082019050919050565b60006121c060058361281c565b91506121cb82612c58565b602082019050919050565b60006121e360058361281c565b91506121ee82612c81565b602082019050919050565b60a08201600082015161220f6000850182611e67565b5060208201516122226020850182612357565b5060408201516122356040850182612096565b5060608201516122486060850182612096565b50608082015161225b6080850182612096565b50505050565b610200820160008201516122786000850182611e67565b50602082015161228b6020850182611e67565b50604082015161229e60408501826123a2565b5060608201516122b160608501826123a2565b5060808201516122c460808501826123a2565b5060a08201516122d760a0850182611e67565b5060c08201516122ea60c0850182612384565b5060e08201516122fd60e0850182611e67565b50610100820151612312610100850182612357565b50610120820151612327610120850182611e85565b5061014082015161233c610160850182611f33565b506101608201516123516101e0850182612384565b50505050565b6123608161294f565b82525050565b61236f8161294f565b82525050565b61237e816129f5565b82525050565b61238d8161297d565b82525050565b61239c8161297d565b82525050565b6123ab81612987565b82525050565b60006040820190506123c66000830185611e76565b6123d36020830184612375565b9392505050565b60006060820190506123ef6000830186611e76565b6123fc6020830185612366565b6124096040830184611e76565b949350505050565b600060a0820190506124266000830188611e76565b6124336020830187612366565b61244060408301866120a5565b61244d60608301856120a5565b61245a60808301846120a5565b9695505050505050565b6000602082019050818103600083015261247e8184611fe1565b905092915050565b600060208201905061249b60008301846120b4565b92915050565b60006020820190506124b660008301846120c3565b92915050565b600060208201905081810360008301526124d5816120e1565b9050919050565b600060208201905081810360008301526124f581612104565b9050919050565b6000602082019050818103600083015261251581612127565b9050919050565b600060208201905081810360008301526125358161214a565b9050919050565b600060208201905081810360008301526125558161216d565b9050919050565b6000602082019050818103600083015261257581612190565b9050919050565b60006020820190508181036000830152612595816121b3565b9050919050565b600060208201905081810360008301526125b5816121d6565b9050919050565b600060a0820190506125d160008301846121f9565b92915050565b60006102c0820190506125ed6000830186612261565b6125fb610200830185612393565b61260961022083018461203f565b949350505050565b60006020820190506126266000830184612393565b92915050565b600060e0820190506126416000830186612393565b61264e6020830185611f8a565b61265b60a0830184611edc565b949350505050565b600061266d61267e565b90506126798282612a07565b919050565b6000604051905090565b600067ffffffffffffffff8211156126a3576126a2612b0e565b5b602082029050919050565b600067ffffffffffffffff8211156126c9576126c8612b0e565b5b602082029050919050565b600067ffffffffffffffff8211156126ef576126ee612b0e565b5b602082029050919050565b600067ffffffffffffffff82111561271557612714612b0e565b5b602082029050919050565b600067ffffffffffffffff82111561273b5761273a612b0e565b5b602082029050919050565b6000819050919050565b6000819050919050565b6000819050602082019050919050565b6000819050919050565b600060029050919050565b600060049050919050565b600081519050919050565b600060059050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006128388261294f565b91506128438361294f565b92508261ffff0382111561285a57612859612a81565b5b828201905092915050565b60006128708261297d565b915061287b8361297d565b92508261288b5761288a612ab0565b5b828204905092915050565b60006128a18261297d565b91506128ac8361297d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156128e5576128e4612a81565b5b828202905092915050565b60006128fb8261297d565b91506129068361297d565b92508282101561291957612918612a81565b5b828203905092915050565b600061292f8261295d565b9050919050565b60008115159050919050565b60008160010b9050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b60006129a6826129bf565b9050919050565b60006129b8826129d1565b9050919050565b60006129ca826129e3565b9050919050565b60006129dc826129e3565b9050919050565b60006129ee8261295d565b9050919050565b6000612a008261294f565b9050919050565b612a1082612b51565b810181811067ffffffffffffffff82111715612a2f57612a2e612b0e565b5b80604052505050565b6000612a4382612942565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000821415612a7657612a75612a81565b5b816000039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f312d303037000000000000000000000000000000000000000000000000000000600082015250565b7f322d303034000000000000000000000000000000000000000000000000000000600082015250565b7f322d303036000000000000000000000000000000000000000000000000000000600082015250565b7f322d303035000000000000000000000000000000000000000000000000000000600082015250565b7f322d303038000000000000000000000000000000000000000000000000000000600082015250565b7f322d303037000000000000000000000000000000000000000000000000000000600082015250565b7f322d303033000000000000000000000000000000000000000000000000000000600082015250565b7f322d303031000000000000000000000000000000000000000000000000000000600082015250565b612cb381612924565b8114612cbe57600080fd5b50565b612cca81612942565b8114612cd557600080fd5b50565b612ce18161294f565b8114612cec57600080fd5b50565b612cf88161297d565b8114612d0357600080fd5b50565b612d0f81612987565b8114612d1a57600080fd5b5056fea26469706673582212203d1ffe4a90304262870ba04128ae6ee88f9741d1a690b674300d6f565d63805064736f6c63430008070033";

type UnicrowArbitratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnicrowArbitratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnicrowArbitrator__factory extends ContractFactory {
  constructor(...args: UnicrowArbitratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UnicrowArbitrator";
  }

  deploy(
    unicrow_: string,
    unicrowClaim_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UnicrowArbitrator> {
    return super.deploy(
      unicrow_,
      unicrowClaim_,
      overrides || {}
    ) as Promise<UnicrowArbitrator>;
  }
  getDeployTransaction(
    unicrow_: string,
    unicrowClaim_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(unicrow_, unicrowClaim_, overrides || {});
  }
  attach(address: string): UnicrowArbitrator {
    return super.attach(address) as UnicrowArbitrator;
  }
  connect(signer: Signer): UnicrowArbitrator__factory {
    return super.connect(signer) as UnicrowArbitrator__factory;
  }
  static readonly contractName: "UnicrowArbitrator";
  public readonly contractName: "UnicrowArbitrator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnicrowArbitratorInterface {
    return new utils.Interface(_abi) as UnicrowArbitratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnicrowArbitrator {
    return new Contract(address, _abi, signerOrProvider) as UnicrowArbitrator;
  }
}
