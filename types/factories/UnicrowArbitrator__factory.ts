/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UnicrowArbitrator,
  UnicrowArbitratorInterface,
} from "../UnicrowArbitrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "unicrow_",
        type: "address",
      },
      {
        internalType: "address",
        name: "unicrowClaim_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengeExtension",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengePeriodStart",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketplaceFee",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "challengePeriodEnd",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "claimed",
            type: "uint16",
          },
          {
            internalType: "int16[2]",
            name: "consensus",
            type: "int16[2]",
          },
          {
            internalType: "uint16[4]",
            name: "split",
            type: "uint16[4]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Escrow",
        name: "escrow",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[5]",
        name: "amounts",
        type: "uint256[5]",
      },
    ],
    name: "Arbitrated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "arbitratorFee",
        type: "uint256",
      },
    ],
    name: "ArbitratorApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "arbitratorFee",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ArbitratorProposed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "validationAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "validation",
        type: "uint16",
      },
    ],
    name: "approveArbitrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "uint16[2]",
        name: "newSplit",
        type: "uint16[2]",
      },
    ],
    name: "arbitrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[5]",
        name: "currentSplit",
        type: "uint16[5]",
      },
    ],
    name: "arbitrationCalculation",
    outputs: [
      {
        internalType: "uint16[4]",
        name: "",
        type: "uint16[4]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "escrowArbitrator",
    outputs: [
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "arbitratorFee",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "sellerConsensus",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "buyerConsensus",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "arbitrated",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "getArbitratorData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "arbitratorFee",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "sellerConsensus",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "buyerConsensus",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "arbitrated",
            type: "bool",
          },
        ],
        internalType: "struct Arbitrator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "arbitratorFee",
        type: "uint16",
      },
    ],
    name: "proposeArbitrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "arbitratorFee",
        type: "uint16",
      },
    ],
    name: "setArbitrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrow",
    outputs: [
      {
        internalType: "contract Unicrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrowClaim",
    outputs: [
      {
        internalType: "contract IUnicrowClaim",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002c0b38038062002c0b8339818101604052810190620000379190620000cc565b60016000819055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505062000166565b600081519050620000c6816200014c565b92915050565b60008060408385031215620000e657620000e562000147565b5b6000620000f685828601620000b5565b92505060206200010985828601620000b5565b9150509250929050565b6000620001208262000127565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001578162000113565b81146200016357600080fd5b50565b60805160601c60a05160601c612a4f620001bc6000396000818161087101526113880152600081816102ce01528181610423015281816107a801528181610e050152818161141d01526115030152612a4f6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80636e4e2934116100665780636e4e29341461013057806379414b3c1461014e5780638e032c5a1461016a578063e2bc475c14610186578063e9db7d79146101ba57610093565b806316e0551b146100985780632ea8eddd146100c8578063496f928b146100e45780634c403c5314610100575b600080fd5b6100b260048036038101906100ad9190611acf565b6101d8565b6040516100bf91906122c7565b60405180910390f35b6100e260048036038101906100dd9190611afc565b6102cc565b005b6100fe60048036038101906100f99190611b4f565b610412565b005b61011a60048036038101906101159190611a1a565b61095f565b6040516101279190612176565b60405180910390f35b610138610e03565b60405161014591906121ac565b60405180910390f35b61016860048036038101906101639190611afc565b610e27565b005b610184600480360381019061017f9190611afc565b611061565b005b6101a0600480360381019061019b9190611acf565b6112fb565b6040516101b1959493929190612123565b60405180910390f35b6101c2611386565b6040516101cf9190612191565b60405180910390f35b6101e06115e5565b600160008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900461ffff1661ffff1661ffff1681526020016000820160169054906101000a900460ff161515151581526020016000820160179054906101000a900460ff161515151581526020016000820160189054906101000a900460ff1615151515815250509050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661030b6113aa565b73ffffffffffffffffffffffffffffffffffffffff161461032b57600080fd5b816001600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001600085815260200190815260200160002060000160146101000a81548161ffff021916908361ffff160217905550600180600085815260200190815260200160002060000160176101000a81548160ff021916908315150217905550600180600085815260200190815260200160002060000160166101000a81548160ff021916908315150217905550505050565b600061041d836101d8565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637d19e596856040518263ffffffff1660e01b815260040161047a919061231c565b6102006040518083038186803b15801561049357600080fd5b505afa1580156104a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cb9190611a74565b9050816000015173ffffffffffffffffffffffffffffffffffffffff166104f06113aa565b73ffffffffffffffffffffffffffffffffffffffff1614610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053d90612227565b60405180910390fd5b81606001518015610558575081604001515b610597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058e906122a7565b60405180910390fd5b61271083600160ff16600281106105b1576105b06127db565b5b6020020160208101906105c49190611aa2565b84600060ff16600281106105db576105da6127db565b5b6020020160208101906105ee9190611aa2565b6105f89190612529565b61ffff161461063c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610633906121c7565b60405180910390fd5b6001610667826101200151600060ff166002811061065d5761065c6127db565b5b60200201516113b2565b61067191906124b3565b816101200151600060ff166002811061068d5761068c6127db565b5b602002019060010b908160010b815250506106c7816101200151600160ff16600281106106bd576106bc6127db565b5b60200201516113b2565b816101200151600160ff16600281106106e3576106e26127db565b5b602002019060010b908160010b8152505082600060ff166002811061070b5761070a6127db565b5b60200201602081019061071e9190611aa2565b816101400151600060ff166004811061073a576107396127db565b5b602002019061ffff16908161ffff168152505082600160ff1660028110610764576107636127db565b5b6020020160208101906107779190611aa2565b816101400151600160ff1660048110610793576107926127db565b5b602002019061ffff16908161ffff16815250507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166364166e63858361014001518461012001516040518463ffffffff1660e01b815260040161080d93929190612337565b600060405180830381600087803b15801561082757600080fd5b505af115801561083b573d6000803e3d6000fd5b50505050600180600086815260200190815260200160002060000160186101000a81548160ff02191690831515021790555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b34291a6866040518263ffffffff1660e01b81526004016108c8919061231c565b60a060405180830381600087803b1580156108e257600080fd5b505af11580156108f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091a9190611a47565b9050847f078c1bd0728767e70d5913396262af1d8c75f3daa7a80c3c6af9594909bf8063834284604051610950939291906122e2565b60405180910390a25050505050565b610967611634565b61096f611634565b6000806109f761271061ffff166109e987600060ff1660058110610996576109956127db565b5b6020020160208101906109a99190611aa2565b61ffff1688600460ff16600581106109c4576109c36127db565b5b6020020160208101906109d79190611aa2565b61ffff166113d790919063ffffffff16565b6113ed90919063ffffffff16565b9050610a7e61271061ffff16610a7087600160ff1660058110610a1d57610a1c6127db565b5b602002016020810190610a309190611aa2565b61ffff1688600460ff1660058110610a4b57610a4a6127db565b5b602002016020810190610a5e9190611aa2565b61ffff166113d790919063ffffffff16565b6113ed90919063ffffffff16565b9150600085600360ff1660058110610a9957610a986127db565b5b602002016020810190610aac9190611aa2565b61ffff161115610b6657610b3b61271061ffff16610b2d87600160ff1660058110610ada57610ad96127db565b5b602002016020810190610aed9190611aa2565b61ffff1688600360ff1660058110610b0857610b076127db565b5b602002016020810190610b1b9190611aa2565b61ffff166113d790919063ffffffff16565b6113ed90919063ffffffff16565b83600360ff1660048110610b5257610b516127db565b5b602002019061ffff16908161ffff16815250505b600085600260ff1660058110610b7f57610b7e6127db565b5b602002016020810190610b929190611aa2565b61ffff161115610c4c57610c2161271061ffff16610c1387600160ff1660058110610bc057610bbf6127db565b5b602002016020810190610bd39190611aa2565b61ffff1688600260ff1660058110610bee57610bed6127db565b5b602002016020810190610c019190611aa2565b61ffff166113d790919063ffffffff16565b6113ed90919063ffffffff16565b83600260ff1660048110610c3857610c376127db565b5b602002019061ffff16908161ffff16815250505b600085600060ff1660058110610c6557610c646127db565b5b602002016020810190610c789190611aa2565b61ffff161115610cf157610cc68161ffff1686600060ff1660058110610ca157610ca06127db565b5b602002016020810190610cb49190611aa2565b61ffff1661140390919063ffffffff16565b83600060ff1660048110610cdd57610cdc6127db565b5b602002019061ffff16908161ffff16815250505b600085600160ff1660058110610d0a57610d096127db565b5b602002016020810190610d1d9190611aa2565b61ffff161115610df857610dcd8261ffff16610dbf85600260ff1660048110610d4957610d486127db565b5b602002015161ffff16610db187600360ff1660048110610d6c57610d6b6127db565b5b602002015161ffff168a600160ff1660058110610d8c57610d8b6127db565b5b602002016020810190610d9f9190611aa2565b61ffff1661140390919063ffffffff16565b61140390919063ffffffff16565b61140390919063ffffffff16565b83600160ff1660048110610de457610de36127db565b5b602002019061ffff16908161ffff16815250505b829350505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b82610e306113aa565b610e3a8282611419565b80610e4b5750610e4a82826114ff565b5b610e8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e81906121e7565b60405180910390fd5b60006001600087815260200190815260200160002090508060000160179054906101000a900460ff161580610ece57508060000160169054906101000a900460ff16155b610f0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0490612207565b60405180910390fd5b848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160000160146101000a81548161ffff021916908361ffff160217905550610f8086610f7b6113aa565b611419565b15610fc45760018160000160176101000a81548160ff02191690831515021790555060008160000160166101000a81548160ff021916908315150217905550611016565b610fd586610fd06113aa565b6114ff565b156110155760018160000160166101000a81548160ff02191690831515021790555060008160000160176101000a81548160ff0219169083151502179055505b5b857fbf42827f17777ed92b098fa9e5f6823ecb5c116e3b23909cc242530b1784dbbc86866110426113aa565b604051611051939291906120ec565b60405180910390a2505050505050565b8261106a6113aa565b6110748282611419565b80611085575061108482826114ff565b5b6110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bb906121e7565b60405180910390fd5b60006110cf866101d8565b9050806000015173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611143576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113a90612247565b60405180910390fd5b806020015161ffff168461ffff1614611191576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118890612267565b60405180910390fd5b6111a28661119d6113aa565b611419565b15611221576000151581606001511515146111f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e990612287565b60405180910390fd5b600180600088815260200190815260200160002060000160176101000a81548160ff0219169083151502179055505b6112328661122d6113aa565b6114ff565b156112b157600015158160400151151514611282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127990612287565b60405180910390fd5b600180600088815260200190815260200160002060000160166101000a81548160ff0219169083151502179055505b857fd514ca74d69a194b5d9455914d0d20ef96d29b6177b241c9d5f608264055199c826000015183602001516040516112eb9291906120c3565b60405180910390a2505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900461ffff16908060000160169054906101000a900460ff16908060000160179054906101000a900460ff16908060000160189054906101000a900460ff16905085565b7f000000000000000000000000000000000000000000000000000000000000000081565b600033905090565b6000808260010b12156113ce57816113c990612734565b6113d0565b815b9050919050565b600081836113e59190612592565b905092915050565b600081836113fb9190612561565b905092915050565b6000818361141191906125ec565b905092915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637d19e596846040518263ffffffff1660e01b8152600401611474919061231c565b6102006040518083038186803b15801561148d57600080fd5b505afa1580156114a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c59190611a74565b6000015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637d19e596846040518263ffffffff1660e01b815260040161155a919061231c565b6102006040518083038186803b15801561157357600080fd5b505afa158015611587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ab9190611a74565b6040015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600061ffff1681526020016000151581526020016000151581526020016000151581525090565b6040518060800160405280600490602082028036833780820191505090505090565b600061166961166484612393565b61236e565b9050808285602086028201111561168357611682612843565b5b60005b858110156116b35781611699888261187a565b845260208401935060208301925050600181019050611686565b5050509392505050565b60006116d06116cb846123b9565b61236e565b905080828560208602820111156116ea576116e9612843565b5b60005b8581101561171a578161170088826119c6565b8452602084019350602083019250506001810190506116ed565b5050509392505050565b6000611737611732846123df565b61236e565b9050808285602086028201111561175157611750612843565b5b60005b85811015611781578161176788826119f0565b845260208401935060208301925050600181019050611754565b5050509392505050565b60008135905061179a816129a6565b92915050565b6000815190506117af816129a6565b92915050565b600082601f8301126117ca576117c9612839565b5b60026117d7848285611656565b91505092915050565b6000819050826020600202820111156117fc576117fb612843565b5b92915050565b600082601f83011261181757611816612839565b5b60046118248482856116bd565b91505092915050565b60008190508260206005028201111561184957611848612843565b5b92915050565b600082601f83011261186457611863612839565b5b6005611871848285611724565b91505092915050565b600081519050611889816129bd565b92915050565b600061020082840312156118a6576118a561283e565b5b6118b161018061236e565b905060006118c1848285016117a0565b60008301525060206118d584828501611a05565b60208301525060406118e9848285016117a0565b60408301525060606118fd84828501611a05565b6060830152506080611911848285016117a0565b60808301525060a0611925848285016119f0565b60a08301525060c061193984828501611a05565b60c08301525060e061194d848285016117a0565b60e083015250610100611962848285016119c6565b61010083015250610120611978848285016117b5565b6101208301525061016061198e84828501611802565b610140830152506101e06119a4848285016119f0565b6101608301525092915050565b6000813590506119c0816129d4565b92915050565b6000815190506119d5816129d4565b92915050565b6000813590506119ea816129eb565b92915050565b6000815190506119ff816129eb565b92915050565b600081519050611a1481612a02565b92915050565b600060a08284031215611a3057611a2f612848565b5b6000611a3e8482850161182d565b91505092915050565b600060a08284031215611a5d57611a5c612848565b5b6000611a6b8482850161184f565b91505092915050565b60006102008284031215611a8b57611a8a612848565b5b6000611a998482850161188f565b91505092915050565b600060208284031215611ab857611ab7612848565b5b6000611ac6848285016119b1565b91505092915050565b600060208284031215611ae557611ae4612848565b5b6000611af3848285016119db565b91505092915050565b600080600060608486031215611b1557611b14612848565b5b6000611b23868287016119db565b9350506020611b348682870161178b565b9250506040611b45868287016119b1565b9150509250925092565b60008060608385031215611b6657611b65612848565b5b6000611b74858286016119db565b9250506020611b85858286016117e0565b9150509250929050565b6000611b9b8383611de4565b60208301905092915050565b6000611bb38383612069565b60208301905092915050565b6000611bcb8383612096565b60208301905092915050565b611be081612620565b82525050565b611bef81612620565b82525050565b611bfe81612423565b611c08818461246b565b9250611c1382612405565b8060005b83811015611c44578151611c2b8782611b8f565b9650611c3683612444565b925050600181019050611c17565b505050505050565b611c5581612423565b611c5f8184612476565b9250611c6a82612405565b8060005b83811015611c9b578151611c828782611b8f565b9650611c8d83612444565b925050600181019050611c6e565b505050505050565b611cac8161242e565b611cb68184612481565b9250611cc18261240f565b8060005b83811015611cf2578151611cd98782611ba7565b9650611ce483612451565b925050600181019050611cc5565b505050505050565b611d038161242e565b611d0d818461248c565b9250611d188261240f565b8060005b83811015611d49578151611d308782611ba7565b9650611d3b83612451565b925050600181019050611d1c565b505050505050565b611d5a81612439565b611d648184612497565b9250611d6f82612419565b8060005b83811015611da0578151611d878782611bbf565b9650611d928361245e565b925050600181019050611d73565b505050505050565b611db181612632565b82525050565b611dc081612632565b82525050565b611dcf81612697565b82525050565b611dde816126a9565b82525050565b611ded8161263e565b82525050565b6000611e006005836124a2565b9150611e0b8261285e565b602082019050919050565b6000611e236005836124a2565b9150611e2e82612887565b602082019050919050565b6000611e466005836124a2565b9150611e51826128b0565b602082019050919050565b6000611e696005836124a2565b9150611e74826128d9565b602082019050919050565b6000611e8c6005836124a2565b9150611e9782612902565b602082019050919050565b6000611eaf6005836124a2565b9150611eba8261292b565b602082019050919050565b6000611ed26005836124a2565b9150611edd82612954565b602082019050919050565b6000611ef56005836124a2565b9150611f008261297d565b602082019050919050565b60a082016000820151611f216000850182611bd7565b506020820151611f346020850182612069565b506040820151611f476040850182611da8565b506060820151611f5a6060850182611da8565b506080820151611f6d6080850182611da8565b50505050565b61020082016000820151611f8a6000850182611bd7565b506020820151611f9d60208501826120b4565b506040820151611fb06040850182611bd7565b506060820151611fc360608501826120b4565b506080820151611fd66080850182611bd7565b5060a0820151611fe960a0850182612096565b5060c0820151611ffc60c08501826120b4565b5060e082015161200f60e0850182611bd7565b50610100820151612024610100850182612069565b50610120820151612039610120850182611bf5565b5061014082015161204e610160850182611ca3565b506101608201516120636101e0850182612096565b50505050565b6120728161264b565b82525050565b6120818161264b565b82525050565b612090816126f1565b82525050565b61209f81612679565b82525050565b6120ae81612679565b82525050565b6120bd81612683565b82525050565b60006040820190506120d86000830185611be6565b6120e56020830184612087565b9392505050565b60006060820190506121016000830186611be6565b61210e6020830185612078565b61211b6040830184611be6565b949350505050565b600060a0820190506121386000830188611be6565b6121456020830187612078565b6121526040830186611db7565b61215f6060830185611db7565b61216c6080830184611db7565b9695505050505050565b600060808201905061218b6000830184611cfa565b92915050565b60006020820190506121a66000830184611dc6565b92915050565b60006020820190506121c16000830184611dd5565b92915050565b600060208201905081810360008301526121e081611df3565b9050919050565b6000602082019050818103600083015261220081611e16565b9050919050565b6000602082019050818103600083015261222081611e39565b9050919050565b6000602082019050818103600083015261224081611e5c565b9050919050565b6000602082019050818103600083015261226081611e7f565b9050919050565b6000602082019050818103600083015261228081611ea2565b9050919050565b600060208201905081810360008301526122a081611ec5565b9050919050565b600060208201905081810360008301526122c081611ee8565b9050919050565b600060a0820190506122dc6000830184611f0b565b92915050565b60006102c0820190506122f86000830186611f73565b6123066102008301856120a5565b612314610220830184611d51565b949350505050565b600060208201905061233160008301846120a5565b92915050565b600060e08201905061234c60008301866120a5565b6123596020830185611cfa565b61236660a0830184611c4c565b949350505050565b6000612378612389565b90506123848282612703565b919050565b6000604051905090565b600067ffffffffffffffff8211156123ae576123ad61280a565b5b602082029050919050565b600067ffffffffffffffff8211156123d4576123d361280a565b5b602082029050919050565b600067ffffffffffffffff8211156123fa576123f961280a565b5b602082029050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060049050919050565b600060059050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b60006124be8261263e565b91506124c98361263e565b925081617fff038313600083121516156124e6576124e561277d565b5b817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800003831260008312161561251e5761251d61277d565b5b828201905092915050565b60006125348261264b565b915061253f8361264b565b92508261ffff038211156125565761255561277d565b5b828201905092915050565b600061256c82612679565b915061257783612679565b925082612587576125866127ac565b5b828204905092915050565b600061259d82612679565b91506125a883612679565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156125e1576125e061277d565b5b828202905092915050565b60006125f782612679565b915061260283612679565b9250828210156126155761261461277d565b5b828203905092915050565b600061262b82612659565b9050919050565b60008115159050919050565b60008160010b9050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b60006126a2826126bb565b9050919050565b60006126b4826126cd565b9050919050565b60006126c6826126df565b9050919050565b60006126d8826126df565b9050919050565b60006126ea82612659565b9050919050565b60006126fc8261264b565b9050919050565b61270c8261284d565b810181811067ffffffffffffffff8211171561272b5761272a61280a565b5b80604052505050565b600061273f8261263e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80008214156127725761277161277d565b5b816000039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f312d303037000000000000000000000000000000000000000000000000000000600082015250565b7f322d303034000000000000000000000000000000000000000000000000000000600082015250565b7f322d303036000000000000000000000000000000000000000000000000000000600082015250565b7f322d303035000000000000000000000000000000000000000000000000000000600082015250565b7f322d303038000000000000000000000000000000000000000000000000000000600082015250565b7f322d303037000000000000000000000000000000000000000000000000000000600082015250565b7f322d303033000000000000000000000000000000000000000000000000000000600082015250565b7f322d303031000000000000000000000000000000000000000000000000000000600082015250565b6129af81612620565b81146129ba57600080fd5b50565b6129c68161263e565b81146129d157600080fd5b50565b6129dd8161264b565b81146129e857600080fd5b50565b6129f481612679565b81146129ff57600080fd5b50565b612a0b81612683565b8114612a1657600080fd5b5056fea2646970667358221220d43889051d4ef6ff5a97b7dda63710f729e77747fb63343f3bca3ed9608d6d8b64736f6c63430008070033";

type UnicrowArbitratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnicrowArbitratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnicrowArbitrator__factory extends ContractFactory {
  constructor(...args: UnicrowArbitratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UnicrowArbitrator";
  }

  deploy(
    unicrow_: string,
    unicrowClaim_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UnicrowArbitrator> {
    return super.deploy(
      unicrow_,
      unicrowClaim_,
      overrides || {}
    ) as Promise<UnicrowArbitrator>;
  }
  getDeployTransaction(
    unicrow_: string,
    unicrowClaim_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(unicrow_, unicrowClaim_, overrides || {});
  }
  attach(address: string): UnicrowArbitrator {
    return super.attach(address) as UnicrowArbitrator;
  }
  connect(signer: Signer): UnicrowArbitrator__factory {
    return super.connect(signer) as UnicrowArbitrator__factory;
  }
  static readonly contractName: "UnicrowArbitrator";
  public readonly contractName: "UnicrowArbitrator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnicrowArbitratorInterface {
    return new utils.Interface(_abi) as UnicrowArbitratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnicrowArbitrator {
    return new Contract(address, _abi, signerOrProvider) as UnicrowArbitrator;
  }
}
